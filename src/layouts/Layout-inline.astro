---
export interface Props {
  title: string;
  description?: string;
}

const { title, description = "Prince Okeke - Full Stack Developer, UI/UX Designer & Freelancer. Specializing in creative web solutions and modern design." } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title} | Prince Okeke - Full Stack Developer & Designer</title>
		
		<!-- Enhanced SEO Meta Tags -->
		<meta name="description" content="Prince Okeke - Professional Full Stack Developer specializing in modern web applications, UI/UX design, and digital solutions. Expert in React, Python, Flask, and creative design." />
		<meta name="keywords" content="Full Stack Developer, Web Developer, UI/UX Designer, React, Python, Flask, JavaScript, Portfolio, Prince Okeke" />
		<meta name="author" content="Prince Okeke" />
		<meta name="robots" content="index, follow" />
		<meta name="language" content="en-US" />
		<meta name="theme-color" content="#f97316" />
		
		<!-- Open Graph Meta Tags -->
		<meta property="og:title" content="{title} | Prince Okeke - Full Stack Developer" />
		<meta property="og:description" content="Professional Full Stack Developer specializing in modern web applications and creative digital solutions." />
		<meta property="og:type" content="website" />
		<meta property="og:url" content="https://prince-okeke.vercel.app" />
		<meta property="og:image" content="https://prince-okeke.vercel.app/og-image.png" />
		<meta property="og:site_name" content="Prince Okeke Portfolio" />
		<meta property="og:locale" content="en_US" />
		
		<!-- Twitter Card Meta Tags -->
		<meta name="twitter:card" content="summary_large_image" />
		<meta name="twitter:title" content="{title} | Prince Okeke - Full Stack Developer" />
		<meta name="twitter:description" content="Professional Full Stack Developer specializing in modern web applications and creative digital solutions." />
		<meta name="twitter:image" content="https://prince-okeke.vercel.app/twitter-image.png" />
		<meta name="twitter:creator" content="@prince_okeke" />
		
		<!-- Canonical URL -->
		<link rel="canonical" href="https://prince-okeke.vercel.app" />
		
		<!-- Apple Touch Icons -->
		<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
		<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
		<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
		<link rel="manifest" href="/site.webmanifest" />
		
		<!-- Preload Critical Resources -->
		<link rel="preload" href="/fonts/glacial-indifference.regular.otf" as="font" type="font/otf" crossorigin />
		<link rel="dns-prefetch" href="//fonts.googleapis.com" />
		
		<!-- Structured Data -->
		<script type="application/ld+json">
		{
			"@context": "https://schema.org",
			"@type": "Person",
			"name": "Prince Okeke",
			"jobTitle": "Full Stack Developer",
			"description": "Professional Full Stack Developer specializing in modern web applications, UI/UX design, and digital solutions.",
			"url": "https://prince-okeke.vercel.app",
			"image": "https://prince-okeke.vercel.app/profile-image.jpg",
			"email": "prince.okekepc@gmail.com",
			"telephone": "+234-901-230-3810",
			"sameAs": [
				"https://github.com/prince-okeke",
				"https://linkedin.com/in/prince-okeke"
			],
			"knowsAbout": [
				"Full Stack Development",
				"React.js",
				"Python",
				"Flask",
				"JavaScript",
				"UI/UX Design",
				"Web Development",
				"Database Design"
			],
			"makesOffer": {
				"@type": "Service",
				"name": "Web Development Services",
				"description": "Custom web application development, UI/UX design, and full-stack solutions"
			}
		}
		</script>
		<meta name="twitter:description" content={description} />
		
		<!-- Enhanced CSS with Advanced Visual Effects -->
		<style>
			/* Font Face Declarations */
			@font-face {
				font-family: 'GlacialIndifference';
				src: url('/fonts/glacial-indifference.regular.otf?v=20250924') format('opentype'),
				     url('/fonts/glacial-indifference.regular.otf?v=20250924') format('truetype');
				font-weight: normal;
				font-style: normal;
				font-display: swap;
			}

			@font-face {
				font-family: 'GlacialIndifference';
				src: url('/fonts/glacial-indifference.regular.otf?v=20250924') format('opentype'),
				     url('/fonts/glacial-indifference.regular.otf?v=20250924') format('truetype');
				font-weight: bold;
				font-style: normal;
				font-display: swap;
			}

			/* Reset and Base Styles */
			* {
				margin: 0;
				padding: 0;
				box-sizing: border-box;
			}

			body {
				background: linear-gradient(135deg, #0a0a0a 0%, #111111 50%, #0a0a0a 100%);
				color: #ffffff;
				font-family: 'GlacialIndifference', Arial, sans-serif !important;
				line-height: 1.6;
				overflow-x: hidden;
				position: relative;
			}

			/* Glacial Indifference for ALL elements */
			* {
				font-family: 'GlacialIndifference', Arial, sans-serif !important;
			}

			/* Force Glacial Indifference on all text elements */
			html, body, div, span, p, h1, h2, h3, h4, h5, h6, a, button, input, textarea, label, select, option {
				font-family: 'GlacialIndifference', Arial, sans-serif !important;
			}

			/* Higher specificity to override any other rules */
			html body * {
				font-family: 'GlacialIndifference', Arial, sans-serif !important;
			}

			/* Ensure font loads immediately */
			.font-loaded {
				font-family: 'GlacialIndifference', Arial, sans-serif !important;
			}

			/* Particle Background Effect */
			.particles-container {
				position: fixed;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 1;
				pointer-events: none;
				overflow: hidden;
			}

			.particle {
				position: absolute;
				background: #f97316;
				border-radius: 50%;
				animation: float 6s ease-in-out infinite;
			}

			.particle:nth-child(odd) {
				background: linear-gradient(45deg, #f97316, #ea580c);
				animation-duration: 8s;
				animation-delay: -2s;
			}

			.particle:nth-child(even) {
				background: rgba(249, 115, 22, 0.3);
				animation-duration: 10s;
				animation-delay: -4s;
			}

			@keyframes float {
				0%, 100% { transform: translateY(0px) rotate(0deg); opacity: 0.7; }
				33% { transform: translateY(-30px) rotate(120deg); opacity: 1; }
				66% { transform: translateY(30px) rotate(240deg); opacity: 0.8; }
			}

			/* Enhanced Grid Pattern */
			body::before {
				content: '';
				position: fixed;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				background-image: 
					linear-gradient(rgba(249, 115, 22, 0.03) 1px, transparent 1px),
					linear-gradient(90deg, rgba(249, 115, 22, 0.03) 1px, transparent 1px);
				background-size: 50px 50px;
				z-index: 1;
				pointer-events: none;
				animation: gridShift 20s linear infinite;
			}

			@keyframes gridShift {
				0% { transform: translate(0, 0); }
				100% { transform: translate(50px, 50px); }
			}

			/* Enhanced Geometric Line Animation */
			.geometric-line {
				stroke: url(#lineGradient);
				stroke-width: 3;
				fill: none;
				stroke-dasharray: 1000;
				stroke-dashoffset: 1000;
				animation: drawLine 3s ease-in-out forwards, pulse 4s ease-in-out 3s infinite;
				filter: drop-shadow(0 0 5px rgba(249, 115, 22, 0.5));
			}

			@keyframes drawLine {
				to {
					stroke-dashoffset: 0;
				}
			}

			@keyframes pulse {
				0%, 100% { 
					stroke-width: 3; 
					filter: drop-shadow(0 0 5px rgba(249, 115, 22, 0.5));
				}
				50% { 
					stroke-width: 4; 
					filter: drop-shadow(0 0 15px rgba(249, 115, 22, 0.8));
				}
			}

			/* Advanced Fade In Animation */
			.fade-in-up {
				opacity: 0;
				transform: translateY(50px) scale(0.95);
				animation: fadeInUp 1.2s cubic-bezier(0.23, 1, 0.32, 1) forwards;
			}

			@keyframes fadeInUp {
				to {
					opacity: 1;
					transform: translateY(0) scale(1);
				}
			}

			/* Text Glow Effect */
			.text-glow {
				text-shadow: 
					0 0 10px rgba(249, 115, 22, 0.5),
					0 0 20px rgba(249, 115, 22, 0.3),
					0 0 30px rgba(249, 115, 22, 0.1);
			}

			/* Enhanced Navigation Styles */
			nav {
				position: fixed;
				top: 0;
				left: 0;
				right: 0;
				z-index: 1000;
				background: rgba(10, 10, 10, 0.95);
				backdrop-filter: blur(20px) saturate(180%);
				border-bottom: 1px solid rgba(249, 115, 22, 0.2);
				transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
			}

			nav.scrolled {
				background: rgba(10, 10, 10, 0.98);
				border-bottom: 1px solid rgba(249, 115, 22, 0.4);
				box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
			}

			.nav-container {
				max-width: 1200px;
				margin: 0 auto;
				display: flex;
				justify-content: space-between;
				align-items: center;
				padding: 1.5rem 2rem;
				transition: padding 0.3s ease;
			}

			nav.scrolled .nav-container {
				padding: 1rem 2rem;
			}

			.nav-logo {
				font-size: 1.75rem;
				font-weight: 900;
				background: linear-gradient(45deg, #f97316, #ea580c, #f97316);
				background-size: 200% 200%;
				-webkit-background-clip: text;
				-webkit-text-fill-color: transparent;
				background-clip: text;
				animation: gradientShift 3s ease-in-out infinite;
				position: relative;
			}

			@keyframes gradientShift {
				0%, 100% { background-position: 0% 50%; }
				50% { background-position: 100% 50%; }
			}

			.nav-logo::after {
				content: '';
				position: absolute;
				bottom: -4px;
				left: 0;
				width: 0;
				height: 2px;
				background: linear-gradient(90deg, #f97316, #ea580c);
				animation: logoUnderline 2s ease-in-out 1s forwards;
			}

			@keyframes logoUnderline {
				to { width: 100%; }
			}

			.nav-links {
				display: flex;
				list-style: none;
				gap: 2.5rem;
			}

			.nav-links a {
				color: #ffffff;
				text-decoration: none;
				font-weight: 600;
				position: relative;
				padding: 0.5rem 0;
				transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
			}

			.nav-links a::before {
				content: '';
				position: absolute;
				top: 0;
				left: 50%;
				width: 0;
				height: 2px;
				background: linear-gradient(90deg, transparent, #f97316, transparent);
				transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
				transform: translateX(-50%);
			}

			.nav-links a::after {
				content: '';
				position: absolute;
				bottom: 0;
				left: 0;
				width: 0;
				height: 2px;
				background: linear-gradient(90deg, #f97316, #ea580c);
				transition: width 0.4s cubic-bezier(0.4, 0, 0.2, 1);
			}

			.nav-links a:hover {
				color: #f97316;
				transform: translateY(-2px);
			}

			.nav-links a:hover::before {
				width: 120%;
			}

			.nav-links a:hover::after {
				width: 100%;
			}

			/* Enhanced Hero Styles */
			.hero-section {
				min-height: 100vh;
				display: flex;
				align-items: center;
				justify-content: center;
				padding: 8rem 2rem 0;
				position: relative;
				background: 
					radial-gradient(circle at 20% 50%, rgba(249, 115, 22, 0.1) 0%, transparent 50%),
					radial-gradient(circle at 80% 20%, rgba(249, 115, 22, 0.05) 0%, transparent 50%),
					radial-gradient(circle at 40% 80%, rgba(249, 115, 22, 0.08) 0%, transparent 50%);
			}

			.hero-text {
				font-size: clamp(3.5rem, 12vw, 10rem);
				font-weight: 900;
				line-height: 0.85;
				text-align: center;
				margin-bottom: 2rem;
				background: linear-gradient(
					135deg,
					#ffffff 0%,
					#f97316 25%,
					#ffffff 50%,
					#ea580c 75%,
					#ffffff 100%
				);
				background-size: 300% 300%;
				-webkit-background-clip: text;
				-webkit-text-fill-color: transparent;
				background-clip: text;
				animation: heroTextGradient 4s ease-in-out infinite, heroFloat 6s ease-in-out infinite;
				position: relative;
			}

			@keyframes heroTextGradient {
				0%, 100% { background-position: 0% 50%; }
				50% { background-position: 100% 50%; }
			}

			@keyframes heroFloat {
				0%, 100% { transform: translateY(0px); }
				50% { transform: translateY(-10px); }
			}

			.hero-text::before {
				content: '';
				position: absolute;
				top: 50%;
				left: 50%;
				width: 120%;
				height: 120%;
				background: radial-gradient(circle, rgba(249, 115, 22, 0.1) 0%, transparent 70%);
				transform: translate(-50%, -50%);
				z-index: -1;
				animation: heroPulse 4s ease-in-out infinite;
			}

			@keyframes heroPulse {
				0%, 100% { transform: translate(-50%, -50%) scale(0.8); opacity: 0.3; }
				50% { transform: translate(-50%, -50%) scale(1.2); opacity: 0.1; }
			}

			.accent-text {
				position: relative;
				display: inline-block;
			}

			.accent-text::after {
				content: '';
				position: absolute;
				bottom: 0;
				left: 0;
				width: 100%;
				height: 4px;
				background: linear-gradient(90deg, transparent, #f97316, transparent);
				animation: accentUnderline 3s ease-in-out 1.5s infinite;
			}

			@keyframes accentUnderline {
				0%, 100% { transform: scaleX(0); }
				50% { transform: scaleX(1); }
			}

			.subtitle {
				font-size: clamp(1.2rem, 3vw, 2rem);
				color: #cccccc;
				margin-bottom: 0.5rem;
				text-align: center;
			}

			.geometric-line-element {
				width: 12rem;
				height: 0.5rem;
				background: linear-gradient(90deg, transparent, #f97316, #ea580c, #f97316, transparent);
				margin: 3rem auto;
				border-radius: 4px;
				position: relative;
				animation: geometricPulse 3s ease-in-out infinite;
			}

			.geometric-line-element::before {
				content: '';
				position: absolute;
				top: 50%;
				left: 0;
				width: 1rem;
				height: 1rem;
				background: radial-gradient(circle, #f97316, #ea580c);
				border-radius: 50%;
				transform: translateY(-50%);
				animation: dotTravel 4s ease-in-out infinite;
			}

			.geometric-line-element::after {
				content: '';
				position: absolute;
				top: 50%;
				right: 0;
				width: 0.75rem;
				height: 0.75rem;
				background: linear-gradient(45deg, #f97316, #ea580c);
				transform: translateY(-50%) rotate(45deg);
				animation: squareRotate 3s linear infinite;
			}

			/* Connecting line styles */
			.connecting-line {
				z-index: 10;
			}
			
			#line-path {
				stroke: #f97316;
				/* allow the element attribute stroke-width to take precedence */
				/* stroke-width intentionally unset here */
				fill: none;
				opacity: 0;
				/* prevent premature transitions; JS will control timing */
				transition: none;
				filter: drop-shadow(0 0 4px rgba(249, 115, 22, 0.5));
			}
			
			#portfolio-i, #okeke-e {
				position: relative;
				color: #f97316;
			}

			@keyframes geometricPulse {
				0%, 100% { 
					transform: scaleX(1); 
					filter: drop-shadow(0 0 5px rgba(249, 115, 22, 0.5));
				}
				50% { 
					transform: scaleX(1.1); 
					filter: drop-shadow(0 0 20px rgba(249, 115, 22, 0.8));
				}
			}

			@keyframes dotTravel {
				0% { left: 0; }
				50% { left: calc(100% - 1rem); }
				100% { left: 0; }
			}

			@keyframes squareRotate {
				0% { transform: translateY(-50%) rotate(45deg); }
				100% { transform: translateY(-50%) rotate(405deg); }
			}

			/* Enhanced Button Styles */
			.btn-primary {
				background: linear-gradient(135deg, #f97316 0%, #ea580c 100%);
				color: #ffffff;
				padding: 1.25rem 2.5rem;
				border: none;
				border-radius: 0.75rem;
				text-decoration: none;
				font-weight: 700;
				display: inline-block;
				position: relative;
				overflow: hidden;
				margin: 0.75rem;
				transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);
				text-transform: uppercase;
				letter-spacing: 1px;
				box-shadow: 
					0 8px 25px rgba(249, 115, 22, 0.3),
					0 4px 12px rgba(0, 0, 0, 0.2);
			}

			.btn-primary::before {
				content: '';
				position: absolute;
				top: 0;
				left: -100%;
				width: 100%;
				height: 100%;
				background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
				transition: left 0.6s ease;
			}

			.btn-primary:hover {
				background: linear-gradient(135deg, #ea580c 0%, #dc2626 100%);
				transform: translateY(-4px) scale(1.05);
				box-shadow: 
					0 15px 35px rgba(249, 115, 22, 0.4),
					0 8px 20px rgba(0, 0, 0, 0.3);
			}

			.btn-primary:hover::before {
				left: 100%;
			}

			.btn-outline {
				background: transparent;
				color: #f97316;
				padding: 1.25rem 2.5rem;
				border: 2px solid #f97316;
				border-radius: 0.75rem;
				text-decoration: none;
				font-weight: 700;
				display: inline-block;
				position: relative;
				overflow: hidden;
				margin: 0.75rem;
				transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);
				text-transform: uppercase;
				letter-spacing: 1px;
				box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
			}

			.btn-outline::before {
				content: '';
				position: absolute;
				top: 0;
				left: -100%;
				width: 100%;
				height: 100%;
				background: linear-gradient(135deg, #f97316, #ea580c);
				transition: left 0.4s ease;
				z-index: -1;
			}

			.btn-outline:hover {
				color: #ffffff;
				border-color: #ea580c;
				transform: translateY(-4px) scale(1.05);
				box-shadow: 
					0 15px 35px rgba(249, 115, 22, 0.3),
					0 8px 20px rgba(0, 0, 0, 0.2);
			}

			.btn-outline:hover::before {
				left: 0;
			}

			/* Section Styles */
			.section {
				padding: 5rem 1.5rem;
				max-width: 1200px;
				margin: 0 auto;
			}

			.section-title {
				font-size: clamp(2.5rem, 6vw, 4rem);
				font-weight: 900;
				text-align: center;
				margin-bottom: 3rem;
			}

			/* Enhanced Project Grid */
			.projects-grid {
				display: grid;
				grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
				gap: 3rem;
				margin-top: 4rem;
				perspective: 1000px;
			}

			.project-card {
				background: linear-gradient(135deg, #1a1a1a 0%, #222222 100%);
				border-radius: 1rem;
				overflow: hidden;
				position: relative;
				transform-style: preserve-3d;
				transition: all 0.6s cubic-bezier(0.23, 1, 0.32, 1);
				border: 1px solid rgba(249, 115, 22, 0.1);
				cursor: pointer;
			}

			/* Modal Styles */
			.modal-overlay {
				position: fixed;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				background: rgba(0, 0, 0, 0.9);
				backdrop-filter: blur(10px);
				z-index: 2000;
				display: none;
				justify-content: center;
				align-items: center;
				padding: 2rem;
				animation: modalFadeIn 0.4s ease-out;
			}

			.modal-overlay.active {
				display: flex;
			}

			@keyframes modalFadeIn {
				from { opacity: 0; }
				to { opacity: 1; }
			}

			.modal-content {
				background: linear-gradient(135deg, #1a1a1a 0%, #222222 100%);
				border-radius: 1.5rem;
				max-width: 900px;
				max-height: 90vh;
				width: 100%;
				overflow-y: auto;
				position: relative;
				border: 1px solid rgba(249, 115, 22, 0.3);
				box-shadow: 
					0 25px 50px rgba(0, 0, 0, 0.5),
					0 0 0 1px rgba(249, 115, 22, 0.1);
				animation: modalSlideIn 0.5s cubic-bezier(0.23, 1, 0.32, 1);
				display: none;
			}

			.modal-content.active {
				display: block;
			}

			@keyframes modalSlideIn {
				from { 
					opacity: 0; 
					transform: translateY(50px) scale(0.9); 
				}
				to { 
					opacity: 1; 
					transform: translateY(0) scale(1); 
				}
			}

			.modal-header {
				padding: 2rem 2rem 1rem;
				border-bottom: 1px solid rgba(249, 115, 22, 0.2);
				display: flex;
				justify-content: space-between;
				align-items: center;
			}

			.modal-header h2 {
				color: #f97316;
				font-size: 2rem;
				font-weight: 900;
				margin: 0;
			}

			.modal-close {
				background: none;
				border: none;
				color: #ffffff;
				font-size: 2rem;
				cursor: pointer;
				padding: 0.5rem;
				border-radius: 0.5rem;
				transition: all 0.3s ease;
				line-height: 1;
			}

			.modal-close:hover {
				background: rgba(249, 115, 22, 0.2);
				color: #f97316;
				transform: scale(1.1);
			}

			.modal-body {
				padding: 2rem;
			}

			.modal-image {
				aspect-ratio: 16 / 9;
				border-radius: 1rem;
				margin-bottom: 2rem;
				display: flex;
				align-items: center;
				justify-content: center;
				font-size: 4rem;
				font-weight: 900;
				color: #ffffff;
			}

			.modal-details h3 {
				color: #f97316;
				font-size: 1.5rem;
				font-weight: 700;
				margin: 2rem 0 1rem;
			}

			.modal-details p {
				color: #cccccc;
				line-height: 1.8;
				margin-bottom: 1.5rem;
			}

			.modal-details ul {
				color: #cccccc;
				margin-left: 1.5rem;
				margin-bottom: 2rem;
			}

			.modal-details li {
				margin-bottom: 0.5rem;
				line-height: 1.6;
			}

			.tech-stack {
				display: flex;
				flex-wrap: wrap;
				gap: 0.75rem;
				margin-bottom: 2rem;
			}

			.tech-tag {
				background: rgba(249, 115, 22, 0.1);
				color: #f97316;
				padding: 0.5rem 1rem;
				border-radius: 2rem;
				font-size: 0.9rem;
				font-weight: 600;
				border: 1px solid rgba(249, 115, 22, 0.2);
			}

			.modal-actions {
				display: flex;
				gap: 1rem;
				margin-top: 3rem;
				flex-wrap: wrap;
			}

			.modal-actions .btn-primary,
			.modal-actions .btn-outline {
				margin: 0;
			}

			.project-card::before {
				content: '';
				position: absolute;
				top: 0;
				left: 0;
				right: 0;
				bottom: 0;
				background: linear-gradient(135deg, rgba(249, 115, 22, 0.1), transparent, rgba(249, 115, 22, 0.05));
				opacity: 0;
				transition: opacity 0.6s ease;
				z-index: 1;
			}

			.project-card:hover {
				transform: translateY(-20px) rotateX(5deg) rotateY(5deg) scale(1.02);
				border-color: rgba(249, 115, 22, 0.4);
				box-shadow: 
					0 25px 50px rgba(0, 0, 0, 0.3),
					0 10px 30px rgba(249, 115, 22, 0.2),
					0 0 0 1px rgba(249, 115, 22, 0.1);
			}

			.project-card:hover::before {
				opacity: 1;
			}

			.project-card:nth-child(even):hover {
				transform: translateY(-20px) rotateX(-5deg) rotateY(-5deg) scale(1.02);
			}

			.project-image {
				aspect-ratio: 16 / 9;
				display: flex;
				align-items: center;
				justify-content: center;
				font-size: 2.5rem;
				font-weight: 900;
				color: #ffffff;
				position: relative;
				overflow: hidden;
			}

			.project-image::before {
				content: '';
				position: absolute;
				top: -50%;
				left: -50%;
				width: 200%;
				height: 200%;
				background: linear-gradient(45deg, transparent 40%, rgba(255, 255, 255, 0.1) 50%, transparent 60%);
				transform: rotate(45deg);
				transition: all 0.6s ease;
				opacity: 0;
			}

			.project-card:hover .project-image::before {
				animation: shimmer 1.5s ease-in-out;
			}

			@keyframes shimmer {
				0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); opacity: 0; }
				50% { opacity: 1; }
				100% { transform: translateX(100%) translateY(100%) rotate(45deg); opacity: 0; }
			}

			.project-image h3 {
				z-index: 2;
				position: relative;
				text-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
				transition: all 0.4s ease;
			}

			.project-card:hover .project-image h3 {
				transform: scale(1.1);
				text-shadow: 0 4px 20px rgba(0, 0, 0, 0.7);
			}

			.orca-bg { 
				background: linear-gradient(135deg, #f97316 0%, #ea580c 50%, #dc2626 100%); 
			}
			.marp-bg { 
				background: linear-gradient(135deg, #3b82f6 0%, #7c3aed 50%, #ec4899 100%); 
			}
			.nike-bg { 
				background: linear-gradient(135deg, #10b981 0%, #0d9488 50%, #059669 100%); 
			}

			.project-content {
				padding: 1.5rem;
			}

			.project-title {
				font-size: 1.25rem;
				font-weight: 900;
				margin-bottom: 0.5rem;
			}

			.project-desc {
				color: #cccccc;
				margin-bottom: 1rem;
			}

			.project-tags {
				display: flex;
				gap: 0.5rem;
				flex-wrap: wrap;
			}

			.tag {
				background: rgba(249, 115, 22, 0.2);
				color: #f97316;
				padding: 0.25rem 0.75rem;
				border-radius: 1rem;
				font-size: 0.875rem;
			}

			/* About Section */
			.about-section {
				background: 
					linear-gradient(135deg, #111111 0%, #1a1a1a 50%, #111111 100%),
					radial-gradient(circle at 30% 40%, rgba(249, 115, 22, 0.05) 0%, transparent 50%);
			}

			.about-text {
				font-size: 1.25rem;
				color: #cccccc;
				text-align: center;
				max-width: 800px;
				margin: 0 auto;
				line-height: 1.8;
			}

			/* Skills Section */
			.skills-container {
				display: grid;
				grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
				gap: 3rem;
				margin-top: 4rem;
			}

			.skills-category {
				background: linear-gradient(135deg, rgba(249, 115, 22, 0.05) 0%, rgba(17, 17, 17, 0.8) 100%);
				padding: 2.5rem;
				border-radius: 1.5rem;
				border: 1px solid rgba(249, 115, 22, 0.1);
				position: relative;
				overflow: hidden;
			}

			.skills-category::before {
				content: '';
				position: absolute;
				top: 0;
				left: 0;
				right: 0;
				height: 4px;
				background: linear-gradient(90deg, #f97316, #ea580c, #f97316);
				background-size: 200% 100%;
				animation: skillsCategoryGlow 3s ease-in-out infinite;
			}

			@keyframes skillsCategoryGlow {
				0%, 100% { background-position: 0% 50%; }
				50% { background-position: 100% 50%; }
			}

			.skills-category-title {
				color: #f97316;
				font-size: 1.5rem;
				font-weight: 700;
				margin-bottom: 2rem;
				text-align: center;
				position: relative;
			}

			.skills-category-title::after {
				content: '';
				position: absolute;
				bottom: -10px;
				left: 50%;
				transform: translateX(-50%);
				width: 60px;
				height: 2px;
				background: linear-gradient(90deg, transparent, #f97316, transparent);
			}

			.skills-grid {
				display: flex;
				flex-direction: column;
				gap: 1.5rem;
			}

			.skill-item {
				display: flex;
				flex-direction: column;
				align-items: center;
				text-align: center;
			}

			.skill-icon {
				font-size: 2rem;
				margin-bottom: 0.5rem;
				filter: grayscale(1);
				transition: all 0.3s ease;
			}

			.skill-item:hover .skill-icon {
				filter: grayscale(0);
				transform: scale(1.1);
			}

			.skill-item h4 {
				color: #ffffff;
				font-size: 1.1rem;
				font-weight: 600;
				margin-bottom: 1rem;
			}

			.skill-bar {
				width: 100%;
				height: 8px;
				background: rgba(255, 255, 255, 0.1);
				border-radius: 4px;
				overflow: hidden;
				position: relative;
			}

			.skill-progress {
				height: 100%;
				background: linear-gradient(90deg, #f97316, #ea580c);
				border-radius: 4px;
				width: 0;
				animation: skillBarFill 2s ease-out forwards;
				position: relative;
			}

			.skill-progress::after {
				content: '';
				position: absolute;
				top: 0;
				left: 0;
				height: 100%;
				width: 100%;
				background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
				animation: skillBarShimmer 2s ease-in-out infinite 2s;
			}

			@keyframes skillBarFill {
				from { width: 0; }
			}

			@keyframes skillBarShimmer {
				0% { transform: translateX(-100%); }
				100% { transform: translateX(100%); }
			}

			/* Enhanced section transitions */
			.section {
				padding: 6rem 2rem;
				max-width: 1200px;
				margin: 0 auto;
				position: relative;
			}

			.section::before {
				content: '';
				position: absolute;
				top: 0;
				left: 50%;
				transform: translateX(-50%);
				width: 100px;
				height: 1px;
				background: linear-gradient(90deg, transparent, #f97316, transparent);
			opacity: 0.5;
		}

		/* Testimonials Section Styles */
		.testimonials-section {
			background: #111111;
			border-radius: 20px;
			margin: 2rem 0;
		}

		.testimonials-container {
			display: grid;
			grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
			gap: 2rem;
			margin-top: 3rem;
		}

		.testimonial-card {
			background: linear-gradient(145deg, #1a1a1a, #0f0f0f);
			border-radius: 15px;
			padding: 2rem;
			border: 1px solid #333;
			transition: all 0.3s ease;
			position: relative;
			overflow: hidden;
		}

		.testimonial-card::before {
			content: '';
			position: absolute;
			top: 0;
			left: -100%;
			width: 100%;
			height: 2px;
			background: linear-gradient(90deg, transparent, #f97316, transparent);
			animation: testimonialShimmer 3s infinite;
		}

		@keyframes testimonialShimmer {
			0% { left: -100%; }
			100% { left: 100%; }
		}

		.testimonial-card:hover {
			transform: translateY(-5px);
			box-shadow: 0 20px 40px rgba(249, 115, 22, 0.1);
			border-color: #f97316;
		}

		.testimonial-content {
			margin-bottom: 1.5rem;
		}

		.testimonial-content p {
			font-size: 1rem;
			line-height: 1.6;
			color: #e5e5e5;
			font-style: italic;
			position: relative;
		}

		.testimonial-content p::before {
			content: '"';
			position: absolute;
			left: -20px;
			top: -10px;
			font-size: 3rem;
			color: #f97316;
			opacity: 0.3;
		}

		.testimonial-author {
			display: flex;
			justify-content: space-between;
			align-items: center;
		}

		.author-info h4 {
			font-size: 1.1rem;
			font-weight: 700;
			color: #f97316;
			margin: 0;
		}

		.author-info p {
			font-size: 0.9rem;
			color: #aaa;
			margin: 0.2rem 0 0 0;
		}

		.testimonial-rating {
			font-size: 1.2rem;
		}

		/* Resume Section Styles */
		.resume-section {
			background: linear-gradient(135deg, #1a1a1a, #0f0f0f);
			border-radius: 20px;
			margin: 2rem 0;
			overflow: hidden;
			border: 1px solid #333;
		}

		.resume-container {
			display: grid;
			grid-template-columns: 1fr 1fr;
			gap: 3rem;
			align-items: center;
			min-height: 400px;
		}

		.resume-content {
			padding-left: 2rem;
		}

		.resume-title {
			font-size: 2.5rem;
			font-weight: 900;
			margin-bottom: 1rem;
			line-height: 1.2;
		}

		.resume-description {
			font-size: 1.1rem;
			color: #ccc;
			margin-bottom: 2rem;
			line-height: 1.6;
		}

		.resume-actions {
			display: flex;
			gap: 1rem;
			flex-wrap: wrap;
		}

		.resume-actions .btn-primary span,
		.resume-actions .btn-outline span {
			margin-right: 0.5rem;
		}

		.resume-preview {
			display: flex;
			justify-content: center;
			align-items: center;
			padding: 2rem;
		}

		.resume-mockup {
			width: 280px;
			height: 360px;
			background: #fff;
			border-radius: 10px;
			box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
			padding: 2rem;
			position: relative;
			transform: perspective(1000px) rotateY(-5deg) rotateX(5deg);
			transition: all 0.3s ease;
		}

		.resume-mockup:hover {
			transform: perspective(1000px) rotateY(0deg) rotateX(0deg);
			box-shadow: 0 30px 60px rgba(249, 115, 22, 0.2);
		}

		.resume-header {
			border-bottom: 2px solid #f97316;
			padding-bottom: 1rem;
			margin-bottom: 1.5rem;
		}

		.resume-line {
			height: 8px;
			background: #ddd;
			border-radius: 4px;
			margin: 0.5rem 0;
		}

		.resume-line.long {
			width: 100%;
			background: linear-gradient(90deg, #f97316, #ea580c);
		}

		.resume-line.medium {
			width: 70%;
			background: #bbb;
		}

		.resume-line.short {
			width: 50%;
			background: #ccc;
		}

		.resume-body {
			display: flex;
			flex-direction: column;
			gap: 1.5rem;
		}

		.resume-section-mock {
			padding: 1rem 0;
		}

		/* Accessibility Enhancements */
		@media (prefers-reduced-motion: reduce) {
			*,
			*::before,
			*::after {
				animation-duration: 0.01ms !important;
				animation-iteration-count: 1 !important;
				transition-duration: 0.01ms !important;
				scroll-behavior: auto !important;
			}
		}

		/* Focus styles for better accessibility */
		a:focus,
		button:focus {
			outline: 2px solid #f97316;
			outline-offset: 2px;
		}

		/* Screen reader only content */
		.sr-only {
			position: absolute;
			width: 1px;
			height: 1px;
			padding: 0;
			margin: -1px;
			overflow: hidden;
			clip: rect(0, 0, 0, 0);
			white-space: nowrap;
			border: 0;
		}

		/* High contrast mode support */
		@media (prefers-contrast: high) {
			.project-card,
			.testimonial-card,
			.skill-item {
				border: 2px solid #fff;
			}
			
			.accent-text {
				color: #ffaa00;
			}
		}

		/* Performance optimizations */
		.particles-container {
			will-change: transform;
			contain: layout style paint;
		}

		.project-card,
		.testimonial-card {
			contain: layout style paint;
		}

		/* Lazy loading styles */
		img {
			loading: lazy;
		}

		.project-image {
			contain: layout style paint;
		}

		/* Footer Styles */
		.footer {
			background: linear-gradient(135deg, #0a0a0a, #1a1a1a);
			margin-top: 4rem;
			border-top: 1px solid #333;
		}

		.footer-container {
			max-width: 1200px;
			margin: 0 auto;
			padding: 3rem 2rem 1rem;
		}

		.footer-content {
			display: grid;
			grid-template-columns: 1fr 2fr;
			gap: 3rem;
			margin-bottom: 2rem;
		}

		.footer-brand h3 {
			font-size: 1.5rem;
			font-weight: 900;
			color: #f97316;
			margin-bottom: 0.5rem;
		}

		.footer-brand p {
			color: #ccc;
			margin-bottom: 0.3rem;
		}

		.footer-links {
			display: grid;
			grid-template-columns: repeat(3, 1fr);
			gap: 2rem;
		}

		.footer-section h4 {
			font-size: 1.1rem;
			font-weight: 700;
			color: #fff;
			margin-bottom: 1rem;
		}

		.footer-section ul {
			list-style: none;
			padding: 0;
		}

		.footer-section ul li {
			margin-bottom: 0.5rem;
		}

		.footer-section ul li a {
			color: #aaa;
			text-decoration: none;
			transition: color 0.3s ease;
		}

		.footer-section ul li a:hover {
			color: #f97316;
		}

		.footer-section ul li:not(:has(a)) {
			color: #aaa;
		}

		.social-links {
			display: flex;
			gap: 1rem;
		}

		.social-links a {
			color: #aaa;
			transition: all 0.3s ease;
			padding: 0.5rem;
			border-radius: 8px;
			background: rgba(249, 115, 22, 0.1);
		}

		.social-links a:hover {
			color: #f97316;
			background: rgba(249, 115, 22, 0.2);
			transform: translateY(-2px);
		}

		.footer-divider {
			height: 1px;
			background: linear-gradient(90deg, transparent, #f97316, transparent);
			margin: 2rem 0 1rem;
		}

		.footer-bottom {
			text-align: center;
		}

		.footer-copyright p {
			color: #666;
			margin-bottom: 0.25rem;
			font-size: 0.9rem;
		}

		/* Footer Responsive Design */
		@media (max-width: 768px) {
			.footer-content {
				grid-template-columns: 1fr;
				gap: 2rem;
				text-align: center;
			}

			.footer-links {
				grid-template-columns: 1fr;
				gap: 1.5rem;
			}

			.social-links {
				justify-content: center;
			}
		}

		/* Contact Form Styles */
		.contact-container {
			display: grid;
			grid-template-columns: 1.2fr 1fr;
			gap: 3rem;
			max-width: 1000px;
			margin: 0 auto;
		}

		.contact-form {
			background: linear-gradient(145deg, #1a1a1a, #0f0f0f);
			border-radius: 15px;
			padding: 2rem;
			border: 1px solid #333;
		}

		.form-group {
			margin-bottom: 1.5rem;
		}

		.form-group label {
			display: block;
			color: #f97316;
			font-weight: 600;
			margin-bottom: 0.5rem;
			font-size: 0.9rem;
		}

		.form-group input,
		.form-group textarea {
			width: 100%;
			padding: 0.75rem;
			background: rgba(255, 255, 255, 0.05);
			border: 1px solid #333;
			border-radius: 8px;
			color: #fff;
			font-size: 1rem;
			transition: all 0.3s ease;
			resize: vertical;
		}

		.form-group input:focus,
		.form-group textarea:focus {
			outline: none;
			border-color: #f97316;
			box-shadow: 0 0 0 2px rgba(249, 115, 22, 0.1);
		}

		.form-submit {
			width: 100%;
			margin-top: 1rem;
		}

		.contact-direct h3 {
			font-size: 1.5rem;
			font-weight: 900;
			margin-bottom: 1.5rem;
			color: #fff;
		}

		.contact-methods {
			display: flex;
			flex-direction: column;
			gap: 1rem;
		}

		.contact-method {
			display: flex;
			align-items: center;
			padding: 1rem;
			background: linear-gradient(145deg, #1a1a1a, #0f0f0f);
			border-radius: 10px;
			border: 1px solid #333;
			text-decoration: none;
			transition: all 0.3s ease;
		}

		.contact-method:hover {
			transform: translateY(-2px);
			box-shadow: 0 10px 20px rgba(249, 115, 22, 0.1);
			border-color: #f97316;
		}

		.contact-icon {
			font-size: 2rem;
			margin-right: 1rem;
		}

		.contact-details h4 {
			font-size: 1rem;
			font-weight: 700;
			color: #f97316;
			margin: 0;
		}

		.contact-details p {
			font-size: 0.9rem;
			color: #ccc;
			margin: 0.2rem 0 0 0;
		}

		/* Contact Form Responsive */
		@media (max-width: 768px) {
			.contact-container {
				grid-template-columns: 1fr;
				gap: 2rem;
			}
		}			/* Responsive */
			@media (max-width: 768px) {
				.nav-links {
					display: none;
				}
				
				.hero-text {
					font-size: 3rem;
				}
				
				.projects-grid {
					grid-template-columns: 1fr;
				}
				
				.testimonials-container {
					grid-template-columns: 1fr;
					gap: 1.5rem;
				}

				.testimonial-card {
					padding: 1.5rem;
				}

				.resume-container {
					grid-template-columns: 1fr;
					gap: 2rem;
				}

				.resume-content {
					padding-left: 0;
					text-align: center;
				}

				.resume-title {
					font-size: 2rem;
				}

				.resume-actions {
					justify-content: center;
				}

				.resume-mockup {
					width: 240px;
					height: 300px;
					transform: none;
				}
			}

			@media (max-width: 480px) {
				.testimonial-content p::before {
					display: none;
				}

				.testimonial-author {
					flex-direction: column;
					align-items: flex-start;
					gap: 1rem;
				}

				.resume-actions {
					flex-direction: column;
				}
			}
		</style>
	</head>
	<body>
		<!-- Particle Background System -->
		<div class="particles-container">
			<div class="particle" style="width: 4px; height: 4px; left: 10%; top: 20%; animation-delay: 0s;"></div>
			<div class="particle" style="width: 6px; height: 6px; left: 20%; top: 60%; animation-delay: -1s;"></div>
			<div class="particle" style="width: 3px; height: 3px; left: 70%; top: 30%; animation-delay: -2s;"></div>
			<div class="particle" style="width: 5px; height: 5px; left: 80%; top: 70%; animation-delay: -3s;"></div>
			<div class="particle" style="width: 4px; height: 4px; left: 30%; top: 10%; animation-delay: -4s;"></div>
			<div class="particle" style="width: 7px; height: 7px; left: 90%; top: 50%; animation-delay: -5s;"></div>
			<div class="particle" style="width: 3px; height: 3px; left: 15%; top: 80%; animation-delay: -6s;"></div>
			<div class="particle" style="width: 5px; height: 5px; left: 60%; top: 15%; animation-delay: -7s;"></div>
		</div>

		<!-- Enhanced Geometric Background -->
		<div style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; z-index: 0; overflow: hidden; pointer-events: none;">
			<svg style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; opacity: 0.3;" xmlns="http://www.w3.org/2000/svg">
				<defs>
					<linearGradient id="lineGradient" x1="0%" y1="0%" x2="100%" y2="0%">
						<stop offset="0%" stop-color="transparent"/>
						<stop offset="20%" stop-color="#f97316"/>
						<stop offset="50%" stop-color="#ea580c"/>
						<stop offset="80%" stop-color="#f97316"/>
						<stop offset="100%" stop-color="transparent"/>
					</linearGradient>
				</defs>
				
				<!-- Main horizontal line -->
				<line x1="0" y1="50%" x2="100%" y2="50%" class="geometric-line" />
				
				<!-- Vertical lines -->
				<line x1="20%" y1="0" x2="20%" y2="100%" class="geometric-line" style="animation-delay: 0.5s;" />
				<line x1="80%" y1="0" x2="80%" y2="100%" class="geometric-line" style="animation-delay: 1s;" />
				
				<!-- Diagonal lines -->
				<line x1="0" y1="0" x2="30%" y2="30%" class="geometric-line" style="animation-delay: 1.5s; opacity: 0.6;" />
				<line x1="70%" y1="0" x2="100%" y2="30%" class="geometric-line" style="animation-delay: 2s; opacity: 0.6;" />
				
				<!-- Corner accents -->
				<circle cx="15%" cy="15%" r="3" fill="#f97316" opacity="0.4">
					<animate attributeName="r" values="3;6;3" dur="4s" repeatCount="indefinite"/>
					<animate attributeName="opacity" values="0.4;0.8;0.4" dur="4s" repeatCount="indefinite"/>
				</circle>
				<circle cx="85%" cy="85%" r="4" fill="#ea580c" opacity="0.3">
					<animate attributeName="r" values="4;8;4" dur="5s" repeatCount="indefinite"/>
					<animate attributeName="opacity" values="0.3;0.7;0.3" dur="5s" repeatCount="indefinite"/>
				</circle>
			</svg>
		</div>
		
		<div style="position: relative; z-index: 10;">
			<slot />
		</div>

		<!-- Enhanced JavaScript for Advanced Interactions -->
		<script>
			// Modal functionality
			function openModal(projectId) {
				const overlay = document.getElementById('modal-overlay');
				const modal = document.getElementById(projectId + '-modal');
				
				if (overlay && modal) {
					overlay.classList.add('active');
					modal.classList.add('active');
					document.body.style.overflow = 'hidden';
				}
			}

			function closeModal() {
				const overlay = document.getElementById('modal-overlay');
				const modals = document.querySelectorAll('.modal-content');
				
				if (overlay) {
					overlay.classList.remove('active');
					modals.forEach(modal => modal.classList.remove('active'));
					document.body.style.overflow = 'auto';
				}
			}

			// Close modal on escape key
			document.addEventListener('keydown', (e) => {
				if (e.key === 'Escape') {
					closeModal();
				}
			});

			// Enhanced scroll effects for navigation
			let lastScrollTop = 0;
			const nav = document.querySelector('nav');
			
			window.addEventListener('scroll', () => {
				const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
				
				if (scrollTop > 100) {
					nav.classList.add('scrolled');
				} else {
					nav.classList.remove('scrolled');
				}
				
				lastScrollTop = scrollTop;
			});

			// Advanced intersection observer with staggered animations
			const observerOptions = {
				threshold: 0.1,
				rootMargin: '0px 0px -100px 0px'
			};

			const observer = new IntersectionObserver((entries) => {
				entries.forEach((entry, index) => {
					if (entry.isIntersecting) {
						// Add staggered delay for multiple elements
						setTimeout(() => {
							entry.target.classList.add('in-view');
						}, index * 200);
					}
				});
			}, observerOptions);

			// Enhanced scroll animations and particle effects
			document.addEventListener('DOMContentLoaded', () => {
				// Force font loading
				document.documentElement.classList.add('font-loaded');
				
				// (Connecting line animation moved to src/pages/index.astro to avoid duplication)
				// The page-level script now owns computing positions and animating the path.
				// This prevents double animations and race conditions on reload.
				
				// Prevent modal close when clicking inside modal content
				document.querySelectorAll('.modal-content').forEach(modal => {
					modal.addEventListener('click', (e) => {
						e.stopPropagation();
					});
				});

				// Skills animation with intersection observer
				const skillsObserver = new IntersectionObserver((entries) => {
					entries.forEach(entry => {
						if (entry.isIntersecting) {
							const skillBars = entry.target.querySelectorAll('.skill-progress');
							skillBars.forEach(bar => {
								const width = bar.style.width;
								bar.style.setProperty('--target-width', width);
								bar.style.animation = 'skillBarFill 2s ease-out forwards';
							});
						}
					});
				}, { threshold: 0.3 });

				// Observe skills section
				const skillsSection = document.getElementById('skills');
				if (skillsSection) {
					skillsObserver.observe(skillsSection);
				}

				// Observe all animated elements
				document.querySelectorAll('.fade-in-up, .project-card, .skills-category').forEach(el => {
					observer.observe(el);
				});
				
				// Smooth scrolling for navigation links
				document.querySelectorAll('a[href^="#"]').forEach(anchor => {
					anchor.addEventListener('click', function (e) {
						e.preventDefault();
						const target = document.querySelector(this.getAttribute('href'));
						if (target) {
							target.scrollIntoView({
								behavior: 'smooth',
								block: 'start'
							});
						}
					});
				});

				// Mouse tracking for subtle parallax effects
				document.addEventListener('mousemove', (e) => {
					const mouseX = e.clientX / window.innerWidth;
					const mouseY = e.clientY / window.innerHeight;
					
					// Subtle parallax for particles
					const particles = document.querySelectorAll('.particle');
					particles.forEach((particle, index) => {
						const speed = (index % 3 + 1) * 0.5;
						const x = (mouseX - 0.5) * speed;
						const y = (mouseY - 0.5) * speed;
						particle.style.transform = `translate(${x}px, ${y}px)`;
					});

					// Parallax effect for hero text
					const heroText = document.querySelector('.hero-text');
					if (heroText) {
						const x = (mouseX - 0.5) * 10;
						const y = (mouseY - 0.5) * 10;
						heroText.style.transform = `translate(${x}px, ${y}px)`;
					}
				});

				// Contact form functionality
				const form = document.getElementById('contactForm');
				if (form) {
					form.addEventListener('submit', function(e) {
						e.preventDefault();
						
						const formData = new FormData(form);
						const data = Object.fromEntries(formData);
						
						// Create mailto link with form data
						const subject = encodeURIComponent(data.subject);
						const body = encodeURIComponent(
							`Name: ${data.name}\n` +
							`Email: ${data.email}\n\n` +
							`Message:\n${data.message}`
						);
						
						const mailtoLink = `mailto:prince.okekepc@gmail.com?subject=${subject}&body=${body}`;
						window.location.href = mailtoLink;
						
						// Show success message
						const button = form.querySelector('.form-submit');
						const originalText = button.innerHTML;
						button.innerHTML = '<span>✅</span> MESSAGE PREPARED!';
						button.style.background = '#22c55e';
						
						setTimeout(() => {
							button.innerHTML = originalText;
							button.style.background = '';
							form.reset();
						}, 3000);
					});
				}
			});
		</script>
	</body>
</html>